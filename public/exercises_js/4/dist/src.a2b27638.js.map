{"version":3,"sources":["src/inventory.js","src/index.js"],"names":["Inventory","items","item","push","length","includes","form","document","querySelector","newItem","tbody","total","checkExists","inventory","render","html","getItems","forEach","innerHTML","textContent","getCount","addEventListener","event","preventDefault","addItem","value","itemToCheck","exists","classList","add","remove"],"mappings":";;ACAA;;;;AAEA,IAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAb;AACA,IAAMC,OAAO,GAAGF,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAhB;AACA,IAAME,KAAK,GAAGH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACA,IAAMG,KAAK,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACA,IAAMI,WAAW,GAAGL,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAApB;AAEA,IAAMK,SAAS,GAAG,IAAIb,kBAAJ,EAAlB;;AAEA,IAAMc,ADVAd,MCUM,GAAG,SAATc,MAAS,GAAM;AACjB,ADVF,MCUMC,IAAI,GAAG,EAAX;AACAF,EAAAA,SAAS,CAACG,QAAV,GAAqBC,OAArB,CAA6B,UAAAf,IAAI,EAAI;AACjCa,IAAAA,IAAI,sBAAeb,IAAf,eAAJ;AACH,ADVH,GCQE,oBDRY;ACWZQ,ADXY,ECWZA,KAAK,CAACQ,SAAN,GAAkBH,IAAlB;AACAJ,EAAAA,KAAK,CAACQ,WAAN,GAAoBN,SAAS,CAACO,QAAV,EAApB;AACH,ADZG,CCKJ,QDLSnB,KAAL,GAAa,EAAb;AACD;ACaHK,IAAI,CAACe,gBAAL,CAAsB,QAAtB,EAAgC,UAACC,KAAD,EAAW;AACvCA,EAAAA,KAAK,CAACC,cAAN;AACAV,EAAAA,SAAS,CAACW,OAAV,CAAkBf,OAAO,CAACgB,KAA1B,EAFuC,CAGvC;4BDdMvB,MAAM;ACeZO,ADdA,ECcAA,OAAO,CAACgB,GDdD,ECcP,GAAgB,ADdJxB,ECcZ,CAJuC,CAKvC,CDfO,CAAWE,IAAX,CAAgBD,IAAhB,CAAP;AACD;ACeCY,EAAAA,MAAM;AACT,CAPD;AASAF,WAAW,CAACS,gBAAZ,CAA6B,EDhBhB,KCgBb,EAAsC,YAAM;AACxC,ADhBA,MCgBMK,ODhBC,ICgBU,CDhBLzB,ECgBQW,GDhBpB,QCgB+B,CAACa,KAAhC;AACA,ADhBD,MCgBOE,MAAM,GAAGd,SAAS,CAACc,MAAV,CAAiBD,WAAjB,CAAf;;AACA,MAAIC,MAAJ,EAAY;AACRf,IAAAA,WAAW,CAACgB,SAAZ,CAAsBC,GAAtB,CAA0B,CDhBrB,MCgBL;AACAjB,ADhBJ,ICgBIA,SDhBG,ECgBQ,CAACgB,EDhBJ3B,KAAL,CAAWG,CCgBd,CAAsB0B,IDhB1B,ECgBI,CAA6B,UAA7B;AACH,ADhBF,GCaC,MAGO;AACHlB,IAAAA,WAAW,CAACgB,SAAZ,CAAsBE,MAAtB,CAA6B,OAA7B;AACAlB,IAAAA,WAAW,CAACgB,SAAZ,CAAsBC,GAAtB,CAA0B,UAA1B;AACH,2BDjBI3B,MAAM;ACkBd,ADjBG,CCOJ,YDPW,KAAKD,KAAL,CAAWI,QAAX,CAAoBH,IAApB,CAAP;AACD;;;;KAGH;;;eACeF","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["class Inventory {\n  /**\n   * @param {string[]} items\n   */\n  constructor() {\n    this.items = [];\n  }\n\n  addItem(item) {\n    return this.items.push(item);\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  getCount() {\n    return this.items.length;\n  }\n\n  exists(item) {\n    return this.items.includes(item);\n  }\n}\n\n// Do not modify this\nexport default Inventory;\n","import Inventory from \"./inventory.js\";\n\nconst form = document.querySelector(\"#add-item-form\");\nconst newItem = document.querySelector(\"#new-item\");\nconst tbody = document.querySelector(\"#tbody\");\nconst total = document.querySelector(\"#total\");\nconst checkExists = document.querySelector(\"#check-exists\");\n\nconst inventory = new Inventory;\n\nconst render = () => {\n    let html = \"\";\n    inventory.getItems().forEach(item => {\n        html += `<tr><td>${item}</td></tr>`\n    });\n    tbody.innerHTML = html;\n    total.textContent = inventory.getCount();\n}\n\nform.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n    inventory.addItem(newItem.value);\n    // empty text field\n    newItem.value = \"\";\n    // re-render\n    render();\n});\n\ncheckExists.addEventListener(\"keyup\", () => {\n    const itemToCheck = checkExists.value;\n    const exists = inventory.exists(itemToCheck);\n    if (exists) {\n        checkExists.classList.add(\"found\");\n        checkExists.classList.remove(\"notfound\");\n    } else {\n        checkExists.classList.remove(\"found\");\n        checkExists.classList.add(\"notfound\");\n    }\n});\n"]}